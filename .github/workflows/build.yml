name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.23', '1.24', '1.25']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
    
    - name: Get dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Build
      run: go build -v ./...
    
    - name: Test
      run: go test -v ./...
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    
    - name: Run staticcheck
      run: staticcheck ./...
    
    - name: Build binary (Unix)
      if: runner.os != 'Windows'
      run: |
        mkdir -p dist
        # Get version info for build
        VERSION="${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}"
        COMMIT="${{ github.sha }}"
        # Build with version information
        go build -ldflags "-X main.version=${VERSION} -X main.commit=${COMMIT}" -o dist/octojoin .
    
    - name: Build binary (Windows)
      if: runner.os == 'Windows'
      run: |
        New-Item -ItemType Directory -Force -Path dist
        $VERSION = "${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}"
        $COMMIT = "${{ github.sha }}"
        go build -ldflags "-X main.version=$VERSION -X main.commit=$COMMIT" -o dist/octojoin.exe .
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: octojoin-${{ matrix.os }}-go${{ matrix.go-version }}
        path: dist/